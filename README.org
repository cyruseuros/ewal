#+ATTR_HTML: :style margin-left: auto; margin-right: auto;
[[./scrots/ewal.gif]]
* Summary
=ewal= is a [[https://github.com/dylanaraps/pywal][pywal]]-based theme generator for Emacs with an eye towards [[https://github.com/syl20bnr/spacemacs][Spacemacs]],
and [[https://github.com/nashamri/spacemacs-theme][spacemacs-theme]], but no dependencies on either (or any external dependencies
for that matter), so you can use it to colorize your vanilla Emacs as well
(using the lower-level =ewal-get-color= utility function).

=ewal= doesn't only extract special and regular colors from =pywal=, it adds
extra shades to them which it can intelligently suppress in a TTY
context. =ewal= will only return base =pywal= colors in a TTY, which would
ordinarily not be supported, but can be displayed if the following command is
run in a TTY:
#+BEGIN_SRC shell
source ~/.cache/wal/colors-tty.sh
#+END_SRC

My hope is that =ewal= will remain theme agnostic, with people contributing
functions like =ewal-get-spacemacs-theme-colors= for other popular themes such
as [[https://github.com/bbatsov/solarized-emacs][solarized-emacs]], making it easy to keep the style of your preferred theme,
while adapting it to the rest of your theming setup. But, of course, it's FOSS!
Do whatever you want with it, just make the world a little cooler in the
process ;)

PRs are more than welcome!

* Usage
** Examples
=ewal= currently fully supports =spacemacs-theme=, colorizing everything it
does, with fine grained control if you want it, or using an automatic setup
function if you don't. It can even customize Spacemacs & vanilla Emacs Evil
cursor colors! Here's the config I have in my =spacemacs/user-init=:
#+BEGIN_SRC emacs-lisp :tangle yes
  (load-file "~/projects/ewal/ewal.el")
  (setq spacemacs-evil-cursors (ewal-get-spacemacs-evil-cursors-colors)
        spacemacs-theme-custom-colors (ewal-get-spacemacs-theme-colors)
        ;; personal taste
        spacemacs-theme-org-highlight t
        theming-modifications
        `((spacemacs-dark (page-break-lines :background ,(ewal-get-color 'background -2))
                          (line-number :background ,(ewal-get-color 'background 0)))))
  ;; reload theme
  (load-theme 'spacemacs-dark t t)
#+END_SRC

You can also use the =APPLY= argument of =ewal='s =get= functions like so:
#+BEGIN_SRC emacs-lisp :tangle yes
  (load-file "~/projects/ewal/ewal.el")
  (ewal-get-spacemacs-theme-colors t)
  (ewal-get-spacemacs-evil-cursor-colors t)
  ;; personal taste
  (setq spacemacs-theme-org-highlight t
        theming-modifications
        `((spacemacs-dark (page-break-lines :background ,(ewal-get-color 'background -2))
                          (line-number :background ,(ewal-get-color 'background 0)))))
  ;; reload theme
  (load-theme 'spacemacs-dark t t)
#+END_SRC

Reloading the theme using =(load-theme 'spacemacs-dark t t)= is necessary due to
the problem with =spacemacs-theme='s =dyn-let= macro discussed [[https://github.com/nashamri/spacemacs-theme/issues/139#issuecomment-482917254_][here]]. I will be
submitting a PR to fix it shortly, which should also enable =Spacemacs= users to
use =ewal= as a library in their =user-init= as discussed [[Note to Spacemacs and Spacemacs-Theme Users and Maintainers][here]].

If you prefer =spacemacs-theme= with borders, simply pass the =EXTRARGS=
argument to =ewal-get-spacemacs-theme-colors= like so:
#+BEGIN_SRC emacs-lisp :tangle yes
  (ewal-get-spacemacs-theme-colors nil t)
#+END_SRC
This argument will eventually grow into a list of additional options, but the
function already handles both list and atom parameters so your config doesn't
break.

** Functions & Variables
For more a more detailed description of =ewal='s capabilities, please consult
the source docstrings, as they are quite extensive for every function and
variable, and offer the benefit of code navigation to related functionality
(which is dutifully referenced wherever possible). Nevertheless, the following
set of tables should get you started:

#+CAPTION: Variables
| Variable                             | Description                                                                                                        |
|--------------------------------------+--------------------------------------------------------------------------------------------------------------------|
| =ewal-wal-cache-dir=                 | the directory where =pywal= caches its colorschemes                                                                |
| =ewal-force-tty-colors=              | force TTY colors even in a GUI                                                                                     |
| =ewal-primary-accent-color=          | most predominant color returned by =ewal-get-spacemacs-theme-colors=                                               |
| =ewal-secondary-accent-color=        | second most predominant color returned by =ewal-get-spacemacs-theme-colors=                                        |
| =ewal-base-palette=                  | base colors extracted from =pywals= cache                                                                          |
| =ewal-extended-palette=              | all colors accessible to =ewal-get-color= in a nice gradient format                                                |
| =ewal-spacemacs-theme-colors=        | colors for Spacemacs theme, loaded globally for easy viewing with [[https://jblevins.org/log/rainbow-mode][rainbow-mode]], like all other variables to follow |
| =ewal-spacemacs-evil-cursors-colors= | colors for Spacemacs Evil cursors                                                                                  |
| =ewal-emacs-evil-cursors-colors=     | colors for vanilla Emacs Evil cursors                                                                              |

#+CAPTION: Functions
| Function                                | Description                                                                                                                                                   |
|-----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------|
| =ewal-get-color=                        | Choose color from =ewal-extended-palette= by symbol name and shade, choosing whether to only approximate it.                                                  |
| =ewal-get-spacemacs-theme-colors=       | Get =ewal= colors in =spacemacs-theme-custom-colors= format, mostly preserving theme style, except for a slightly more modern look.                           |
| =ewal-get-spacemacs-evil-cursor-colors= | Get =ewal= colors in =spacemacs-evil-cursors= format.                                                                                                         |
| =ewal-get-emacs-evil-cursor-colors=     | Get =ewal= colors as an alist, each element of which is in vanilla Emacs Evil format. Advisable to use =APPLY= argument, as manual application is convoluted. |


* Note to Spacemacs and Spacemacs-Theme Users and Maintainers 
If you're using =spacemacs-theme= as jut another package in vanilla =Emacs=, you
should experience no problems.

However, since =spacemacs-theme= is part of the =spacemacs-bootstrap= layer, it
is loaded before everything else. And since =spacemacs/user-init= is called
before =load-path= is fully populated, it's impossible to =require= this
package, while using =with-eval-after-load= sets the requisite environment
variables long after =spacemacs-theme= is loaded.

Get in touch if you have any advice on integrating this into the =Spacemacs=
boot process, and eventually into the repo itself!
